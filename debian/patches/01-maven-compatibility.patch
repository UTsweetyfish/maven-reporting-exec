Description: Fixes the compatibility with the version of Maven in Debian
Author: Emmanuel Bourg <ebourg@apache.org>
Forwarded: not-needed
--- a/src/test/java/org/apache/maven/reporting/exec/TestDefaultMavenReportExecutor.java
+++ b/src/test/java/org/apache/maven/reporting/exec/TestDefaultMavenReportExecutor.java
@@ -47,11 +47,11 @@
 import org.codehaus.plexus.classworlds.realm.ClassRealm;
 import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
 import org.codehaus.plexus.logging.Logger;
-import org.sonatype.aether.RepositorySystemSession;
-import org.sonatype.aether.artifact.Artifact;
-import org.sonatype.aether.repository.RemoteRepository;
-import org.sonatype.aether.repository.WorkspaceReader;
-import org.sonatype.aether.repository.WorkspaceRepository;
+import org.eclipse.aether.RepositorySystemSession;
+import org.eclipse.aether.artifact.Artifact;
+import org.eclipse.aether.repository.RemoteRepository;
+import org.eclipse.aether.repository.WorkspaceReader;
+import org.eclipse.aether.repository.WorkspaceRepository;
 
 import java.io.File;
 import java.util.Collections;
@@ -262,7 +262,7 @@
             return localArtifactRepository;
         }
         String localRepoPath =
-            System.getProperty( "localRepository", MavenCli.userMavenConfigurationHome.getPath() + "/repository" );
+            System.getProperty( "localRepository", MavenCli.USER_MAVEN_CONFIGURATION_HOME.getPath() + "/repository" );
 
         localArtifactRepository = lookup( RepositorySystem.class ).createLocalRepository( new File( localRepoPath ) );
         return localArtifactRepository;
@@ -274,9 +274,9 @@
 
         SettingsBuildingRequest settingsBuildingRequest = new DefaultSettingsBuildingRequest();
 
-        settingsBuildingRequest.setGlobalSettingsFile( MavenCli.DEFAULT_GLOBAL_SETTINGS_FILE );
+        settingsBuildingRequest.setGlobalSettingsFile( org.apache.maven.cli.configuration.SettingsXmlConfigurationProcessor.DEFAULT_GLOBAL_SETTINGS_FILE );
 
-        settingsBuildingRequest.setUserSettingsFile( MavenCli.DEFAULT_USER_SETTINGS_FILE );
+        settingsBuildingRequest.setUserSettingsFile( org.apache.maven.cli.configuration.SettingsXmlConfigurationProcessor.DEFAULT_USER_SETTINGS_FILE );
 
         settingsBuildingRequest.getSystemProperties().putAll( System.getProperties() );
 
--- a/src/main/java/org/apache/maven/reporting/exec/DefaultMavenPluginManagerHelper.java
+++ b/src/main/java/org/apache/maven/reporting/exec/DefaultMavenPluginManagerHelper.java
@@ -115,14 +115,7 @@
 
     private Object createExclusionsDependencyFilter( List<String> artifactIdsList )
     {
-        if ( isEclipseAether() )
-        {
-            return new org.eclipse.aether.util.filter.ExclusionsDependencyFilter( artifactIdsList );
-        }
-        else
-        {
-            return new org.sonatype.aether.util.filter.ExclusionsDependencyFilter( artifactIdsList );
-        }
+        return new org.eclipse.aether.util.filter.ExclusionsDependencyFilter( artifactIdsList );
     }
 
     public PluginDescriptor getPluginDescriptor( Plugin plugin, MavenSession session )
